function [] = trainer(paras)
    % generating samples and labels
    sampleGenerator(paras);

    % load generated samples and labels and split to train and validation
    [trainData, valData] = dataLoader(paras);

    % load the checkpoint net or init a new net
    net = netLoader(paras);

    % options for training
    options = trainingOptions('adam', ...
        'Plots', 'training-progress', ...
        'Verbose', true, ...
        'MaxEpochs', 30, ...
        'MiniBatchSize', 2, ...  
        'Shuffle','every-epoch', ...
        'ValidationData', valData, ...
        'ValidationFrequency', 600, ...  % iteration
        'ValidationPatience', 6, ...    
        'InitialLearnRate', 1e-5, ...
        'LearnRateSchedule', 'piecewise', ...
        'LearnRateDropFactor', 0.1000, ...
        'LearnRateDropPeriod', 2, ...    % epoch
        'CheckpointPath', paras.CheckpointDir, ...
        'CheckpointFrequency', 600, ...  % iteration
        'CheckpointFrequencyUnit', 'iteration', ...
        'ResetInputNormalization', 0 );
    
    % start to train
    trainNetwork(trainData, net, options);
end
