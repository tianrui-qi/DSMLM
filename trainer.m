function [] = trainer()
    % load parameters we will use
    paras = setParas();
    
    % generating samples and labels
    dataGenerator();

    % load generated samples and labels and split to train and validation
    [trainData, valData] = dataLoader();

    % load the checkpoint net or init a new net
    net = netLoader();

    % options for training
    options = trainingOptions('adam', ...
        'Plots',                        'training-progress', ...
        'Verbose',                      true, ...
        'MaxEpochs',                    20, ...
        'MiniBatchSize',                1, ...  
        'Shuffle',                      'never', ...
        'ValidationData',               valData, ...
        'ValidationFrequency',          700, ...  % iteration
        'ValidationPatience',           8, ...    
        'InitialLearnRate',             1e-4, ...
        'LearnRateSchedule',            'piecewise', ...
        'LearnRateDropFactor',          0.1000, ...
        'LearnRateDropPeriod',          2, ...    % epoch
        'CheckpointPath',               paras.CheckpointDir, ...
        'CheckpointFrequency',          700, ...  % iteration
        'CheckpointFrequencyUnit',      'iteration', ...
        'ResetInputNormalization',      false, ...
        'BatchNormalizationStatistics', 'moving');
    
    % start to train
    trainNetwork(trainData, net, options);
end
